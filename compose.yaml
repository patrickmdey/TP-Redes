version: '3.8'

networks:
    web-monitor:
        driver: bridge #default network driver. standalone container that comumincates with other containers

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
    node-exporter:
        image: prom/node-exporter:latest
        container_name: node-exporter
        restart: unless-stopped
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
        expose:
            - 9100
        networks:
            - web-monitor

    rest-api:
        image: python:latest
        container_name: rest-api
        restart: unless-stopped
        volumes:
            - ./api_rest:/usr/src/app
        ports:
            - 5001:5001
        networks:
            - web-monitor
        command: sh -c "cd /usr/src/app && pip install -r requirements.txt && python3 api.py"

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        restart: unless-stopped
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--web.enable-lifecycle'
        expose:
            - 9090
        ports:
            - 9090:9090
        networks:
            - web-monitor

    grafana:
        image: grafana/grafana-oss:latest
        container_name: grafana
        restart: unless-stopped
        volumes:
            - ./grafana.ini:/etc/grafana/grafana.ini
            - grafana_data:/var/lib/grafana
            - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
            - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
            - ./grafana/provisioning/alert-rules:/etc/grafana/provisioning/alert-rules
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=admin
        expose:
            - 3001
        ports:
            - 3001:3001
        networks:
            - web-monitor

    mongo:
        image: mongo:latest
        container_name: mongo
        hostname: mongo
        restart: unless-stopped
        # volumes:
        #     - ./mongo/mongo.conf:/etc/mongo/mongo.conf
        expose:
            - 27017
        ports:
            - 27017:27017
        networks:
            - web-monitor

    mongo-exporter:
        # image: percona/mongodb_exporter:latest
        image: bitnami/mongodb-exporter:latest
        container_name: mongo-exporter
        restart: unless-stopped
        environment:
            - MONGODB_URI=mongodb://mongo:27017
        expose:
            - 9216
        ports:
            - 9216:9216
        networks:
            - web-monitor
        command:
            - '--mongodb.uri=mongodb://mongo:27017'
            - '--mongodb.collstats-colls=players'
            - '--discovering-mode'
            - '--mongodb.direct-connect'
            - '--collect-all'

    apache:
        build:
            context: ./apache
            dockerfile: Dockerfile
        container_name: apache
        restart: unless-stopped
        networks:
            - web-monitor
        expose:
            - 80
        ports:
            - 80:80

    apache-exporter:
        image: lusotycoon/apache-exporter:latest
        container_name: apache-exporter
        restart: unless-stopped
        expose:
            - 9117
        ports:
            - 9117:9117
        networks:
            - web-monitor
        command:
            - '--scrape_uri=http://apache:80/server-status?auto'

    blackbox-exporter:
        image: prom/blackbox-exporter:latest
        container_name: blackbox-exporter
        restart: unless-stopped
        expose:
            - 9115
        ports:
            - 9115:9115
        networks:
            - web-monitor
        command:
            - '--config.file=/config/blackbox.yml'
        volumes:
            - ./blackbox/blackbox.yml:/config/blackbox.yml

    delay-web:
        build:
            context: ./delay-web
            dockerfile: Dockerfile
        container_name: delay-web
        restart: unless-stopped
        networks:
            - web-monitor
        expose:
            - 3002
        ports:
            - 3002:3002
